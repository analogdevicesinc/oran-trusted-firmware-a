/*
 * Copyright (c) 2024, Analog Devices Incorporated, All Rights Reserved
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */
#ifndef __ADI_ADRV906X_MCS_INTERNAL_H__
#define __ADI_ADRV906X_MCS_INTERNAL_H__


/* register definitions */
#define IDX_CORE_DEVCLK_CONTROL_GROUP_REFCLK_CLKSYNTH_CONTROL   0x00001638U
#define IDX_CORE_DEVCLK_CONTROL_GROUP_REFCLK_RFSYNTH_WEST_CONTROL       0x00001634U
#define IDX_CORE_DEVCLK_CONTROL_GROUP_REFCLK_RFSYNTH_EAST_CONTROL       0x00001636U
#define IDX_PLL_MEM_MAP_REF_CLK_REG_REF_CLK_BYTE0       0x00000074U
#define IDX_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_ROOT_DIV     0x00000072U
#define IDX_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_DIGCORE_2    0x00000070U
#define IDX_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_DIGCORE_3    0x00000071U
#define IDX_TDR_DIG_MISC_CLKDIV_CONTROL 0x0000072CU
#define IDX_TDR_DIG_MISC_CLKDIV_SAMPLE_CLK_DIVRATIO     0x00000730U
#define IDX_RX_DIG_ADC_INTERFACE_FIFO_ADC_INTERFACE_FIFO_0      0x000001F0U
#define IDX_RX_DIG_ADC_INTERFACE_FIFO_ADC_INTERFACE_FIFO_1      0x000001F4U
#define IDX_RX_DIG_CHANNEL_CONFIGURATION_CHANNEL_CONFIG_9       0x00000024U
#define IDX_RX_DIG_CHANNEL_CONFIGURATION_CHANNEL_CONFIG_0       0x00000000U
#define IDX_RX_DIG_CHANNEL_CONFIGURATION_CHANNEL_CONFIG_8       0x00000020U
#define IDX_TX_ANALOG_DAC_APACHE_DAC_CLK_APACHE_CLKDIV_CONTROL  0x00000051U
#define IDX_TX_ANALOG_DAC_APACHE_DAC_CLK_APACHE_CLKDIV_SAMPLE_CLK_DIVRATIO      0x00000052U
#define IDX_TX_DATAPATH_TX_DAC_INTERFACE_CTL_STAT       0x0000000CU
#define IDX_TX_DATAPATH_FILTER_CONTROL_0        0x00000000U
#define IDX_TX_DIG_CLOCK_CONTROL_REGISTERS_CLOCK_CONTROL_0      0x00000004U
#define IDX_ACTRL_ORX_WEST_REGMAP_ACTRL_ORX_WEST_REGMAP_CLKDIV_CONTROL  0x000003F2U
#define IDX_ACTRL_ORX_WEST_REGMAP_ACTRL_ORX_WEST_REGMAP_CLKDIV_SAMPLE_CLK_DIVRATIO      0x000003F3U
#define IDX_ORX_DIG_ADC_AND_INTERFACE_CONTROL_VENUS_INTERFACE_CONTROL   0x000000A4U
#define IDX_ORX_DIG_CHANNEL_CONFIGURATION_REGISTERS_CLOCK_CONFIG0       0x00000004U
#define IDX_ORX_DIG_CHANNEL_CONFIGURATION_REGISTERS_DATAPATH_CONFIG     0x00000000U
#define IDX_ACTRL_TXLB_WEST_REGMAP_ACTRL_TXLB_WEST_REGMAP_CLKDIV_CONTROL        0x000003F2U
#define IDX_ACTRL_TXLB_WEST_REGMAP_ACTRL_TXLB_WEST_REGMAP_CLKDIV_SAMPLE_CLK_DIVRATIO    0x000003F3U
#define IDX_PLL_MEM_MAP_PD_EN_RESETB_REGS_MISC_PD       0x00000001U
#define IDX_PLL_MEM_MAP_PD_EN_RESETB_REGS_SYNTH_RESETB  0x00000000U
#define IDX_CORE_DEVCLK_CONTROL_GROUP_SYSREF_BUFFER_CONTROL     0x00001631U
#define IDX_CORE_DEVCLK_CONTROL_GROUP_DEVCLK_DIVIDER_CONTROL    0x0000162DU
#define IDX_PLL_MEM_MAP_PLL_BASE_REGS_MCS_CONTROL       0x00000022U
#define IDX_PLL_MEM_MAP_PLL_BASE_REGS_MCS_STATUS        0x00000025U
#define IDX_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS      0x00094000U
#define IDX_A55_SYS_CFG_CLOCK_CONTROLS_ETH_REFCLK_CONTROLS      0x00094004U
#define IDX_EMAC_COMMON_ETH_PLL_REGISTERS_ETHPLL_REG_MAP_CONTROL        0x00000050U
#define pREG_CORE_DEVCLK_CONTROL_GROUP_REFCLK_CLKSYNTH_CONTROL(base)    ((volatile uint8_t *)((base) + IDX_CORE_DEVCLK_CONTROL_GROUP_REFCLK_CLKSYNTH_CONTROL))
#define pREG_CORE_DEVCLK_CONTROL_GROUP_REFCLK_RFSYNTH_WEST_CONTROL(base)        ((volatile uint8_t *)((base) + IDX_CORE_DEVCLK_CONTROL_GROUP_REFCLK_RFSYNTH_WEST_CONTROL))
#define pREG_CORE_DEVCLK_CONTROL_GROUP_REFCLK_RFSYNTH_EAST_CONTROL(base)        ((volatile uint8_t *)((base) + IDX_CORE_DEVCLK_CONTROL_GROUP_REFCLK_RFSYNTH_EAST_CONTROL))
#define pREG_PLL_MEM_MAP_REF_CLK_REG_REF_CLK_BYTE0(base)        ((volatile uint8_t *)((base) + IDX_PLL_MEM_MAP_REF_CLK_REG_REF_CLK_BYTE0))
#define pREG_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_ROOT_DIV(base)      ((volatile uint8_t *)((base) + IDX_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_ROOT_DIV))
#define pREG_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_DIGCORE_2(base)     ((volatile uint8_t *)((base) + IDX_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_DIGCORE_2))
#define pREG_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_DIGCORE_3(base)     ((volatile uint8_t *)((base) + IDX_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_DIGCORE_3))
#define pREG_TDR_DIG_MISC_CLKDIV_CONTROL(base)  ((volatile uint32_t *)((base) + IDX_TDR_DIG_MISC_CLKDIV_CONTROL))
#define pREG_TDR_DIG_MISC_CLKDIV_SAMPLE_CLK_DIVRATIO(base)      ((volatile uint32_t *)((base) + IDX_TDR_DIG_MISC_CLKDIV_SAMPLE_CLK_DIVRATIO))
#define pREG_RX_DIG_ADC_INTERFACE_FIFO_ADC_INTERFACE_FIFO_0(base)       ((volatile uint32_t *)((base) + IDX_RX_DIG_ADC_INTERFACE_FIFO_ADC_INTERFACE_FIFO_0))
#define pREG_RX_DIG_ADC_INTERFACE_FIFO_ADC_INTERFACE_FIFO_1(base)       ((volatile uint32_t *)((base) + IDX_RX_DIG_ADC_INTERFACE_FIFO_ADC_INTERFACE_FIFO_1))
#define pREG_RX_DIG_CHANNEL_CONFIGURATION_CHANNEL_CONFIG_9(base)        ((volatile uint32_t *)((base) + IDX_RX_DIG_CHANNEL_CONFIGURATION_CHANNEL_CONFIG_9))
#define pREG_RX_DIG_CHANNEL_CONFIGURATION_CHANNEL_CONFIG_0(base)        ((volatile uint32_t *)((base) + IDX_RX_DIG_CHANNEL_CONFIGURATION_CHANNEL_CONFIG_0))
#define pREG_RX_DIG_CHANNEL_CONFIGURATION_CHANNEL_CONFIG_8(base)        ((volatile uint32_t *)((base) + IDX_RX_DIG_CHANNEL_CONFIGURATION_CHANNEL_CONFIG_8))
#define pREG_TX_ANALOG_DAC_APACHE_DAC_CLK_APACHE_CLKDIV_CONTROL(base)   ((volatile uint8_t *)((base) + IDX_TX_ANALOG_DAC_APACHE_DAC_CLK_APACHE_CLKDIV_CONTROL))
#define pREG_TX_ANALOG_DAC_APACHE_DAC_CLK_APACHE_CLKDIV_SAMPLE_CLK_DIVRATIO(base)       ((volatile uint8_t *)((base) + IDX_TX_ANALOG_DAC_APACHE_DAC_CLK_APACHE_CLKDIV_SAMPLE_CLK_DIVRATIO))
#define pREG_TX_DATAPATH_TX_DAC_INTERFACE_CTL_STAT(base)        ((volatile uint32_t *)((base) + IDX_TX_DATAPATH_TX_DAC_INTERFACE_CTL_STAT))
#define pREG_TX_DATAPATH_FILTER_CONTROL_0(base) ((volatile uint32_t *)((base) + IDX_TX_DATAPATH_FILTER_CONTROL_0))
#define pREG_TX_DIG_CLOCK_CONTROL_REGISTERS_CLOCK_CONTROL_0(base)       ((volatile uint32_t *)((base) + IDX_TX_DIG_CLOCK_CONTROL_REGISTERS_CLOCK_CONTROL_0))
#define pREG_ACTRL_ORX_WEST_REGMAP_ACTRL_ORX_WEST_REGMAP_CLKDIV_CONTROL(base)   ((volatile uint8_t *)((base) + IDX_ACTRL_ORX_WEST_REGMAP_ACTRL_ORX_WEST_REGMAP_CLKDIV_CONTROL))
#define pREG_ACTRL_ORX_WEST_REGMAP_ACTRL_ORX_WEST_REGMAP_CLKDIV_SAMPLE_CLK_DIVRATIO(base)       ((volatile uint8_t *)((base) + IDX_ACTRL_ORX_WEST_REGMAP_ACTRL_ORX_WEST_REGMAP_CLKDIV_SAMPLE_CLK_DIVRATIO))
#define pREG_ORX_DIG_ADC_AND_INTERFACE_CONTROL_VENUS_INTERFACE_CONTROL(base)    ((volatile uint32_t *)((base) + IDX_ORX_DIG_ADC_AND_INTERFACE_CONTROL_VENUS_INTERFACE_CONTROL))
#define pREG_ORX_DIG_CHANNEL_CONFIGURATION_REGISTERS_CLOCK_CONFIG0(base)        ((volatile uint32_t *)((base) + IDX_ORX_DIG_CHANNEL_CONFIGURATION_REGISTERS_CLOCK_CONFIG0))
#define pREG_ORX_DIG_CHANNEL_CONFIGURATION_REGISTERS_DATAPATH_CONFIG(base)      ((volatile uint32_t *)((base) + IDX_ORX_DIG_CHANNEL_CONFIGURATION_REGISTERS_DATAPATH_CONFIG))
#define pREG_ACTRL_TXLB_WEST_REGMAP_ACTRL_TXLB_WEST_REGMAP_CLKDIV_CONTROL(base) ((volatile uint8_t *)((base) + IDX_ACTRL_TXLB_WEST_REGMAP_ACTRL_TXLB_WEST_REGMAP_CLKDIV_CONTROL))
#define pREG_ACTRL_TXLB_WEST_REGMAP_ACTRL_TXLB_WEST_REGMAP_CLKDIV_SAMPLE_CLK_DIVRATIO(base)     ((volatile uint8_t *)((base) + IDX_ACTRL_TXLB_WEST_REGMAP_ACTRL_TXLB_WEST_REGMAP_CLKDIV_SAMPLE_CLK_DIVRATIO))
#define pREG_PLL_MEM_MAP_PD_EN_RESETB_REGS_MISC_PD(base)        ((volatile uint8_t *)((base) + IDX_PLL_MEM_MAP_PD_EN_RESETB_REGS_MISC_PD))
#define pREG_PLL_MEM_MAP_PD_EN_RESETB_REGS_SYNTH_RESETB(base)   ((volatile uint8_t *)((base) + IDX_PLL_MEM_MAP_PD_EN_RESETB_REGS_SYNTH_RESETB))
#define pREG_CORE_DEVCLK_CONTROL_GROUP_SYSREF_BUFFER_CONTROL(base)      ((volatile uint8_t *)((base) + IDX_CORE_DEVCLK_CONTROL_GROUP_SYSREF_BUFFER_CONTROL))
#define pREG_CORE_DEVCLK_CONTROL_GROUP_DEVCLK_DIVIDER_CONTROL(base)     ((volatile uint8_t *)((base) + IDX_CORE_DEVCLK_CONTROL_GROUP_DEVCLK_DIVIDER_CONTROL))
#define pREG_PLL_MEM_MAP_PLL_BASE_REGS_MCS_CONTROL(base)        ((volatile uint8_t *)((base) + IDX_PLL_MEM_MAP_PLL_BASE_REGS_MCS_CONTROL))
#define pREG_PLL_MEM_MAP_PLL_BASE_REGS_MCS_STATUS(base) ((volatile uint8_t *)((base) + IDX_PLL_MEM_MAP_PLL_BASE_REGS_MCS_STATUS))
#define pREG_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS(base)       ((volatile uint32_t *)((base) + IDX_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS))
#define pREG_A55_SYS_CFG_CLOCK_CONTROLS_ETH_REFCLK_CONTROLS(base)       ((volatile uint32_t *)((base) + IDX_A55_SYS_CFG_CLOCK_CONTROLS_ETH_REFCLK_CONTROLS))
#define pREG_EMAC_COMMON_ETH_PLL_REGISTERS_ETHPLL_REG_MAP_CONTROL(base) ((volatile uint32_t *)((base) + IDX_EMAC_COMMON_ETH_PLL_REGISTERS_ETHPLL_REG_MAP_CONTROL))

/* bitfield definitions */
#define BITM_CORE_CLKPLL_REFPATH_PD     0x1U
#define BITM_CORE_WEST_RFPLL_SYNTH_REFPATH_PD   0x1U
#define BITM_CORE_EAST_RFPLL_SYNTH_REFPATH_PD   0x1U
#define BITM_PLL_MEM_MAP_REF_CLK_DIVIDE_RATIO   0x3FU
#define BITM_PLL_MEM_MAP_ROOT_CLKDIV_DIV2       0x20U
#define BITM_PLL_MEM_MAP_ROOT_CLKDIV_FUND       0x10U
#define BITM_PLL_MEM_MAP_DIGCORE_CLKDIV_THERMCODE       0x70U
#define BITM_PLL_MEM_MAP_DIGCORE_INTDIV_BINCODE 0xFU
#define BITM_PLL_MEM_MAP_CLKGEN_SPARES  0xFFU
#define BITM_TDR_DIG_MISC_CLKDIV_RB     0x20U
#define BITM_TDR_DIG_MISC_CLKDIV_THERMCODE      0x7U
#define BITM_TDR_DIG_MISC_DIV1_EN       0x1U
#define BITM_RX_DIG_ADC_FIFO_RD_PTR_INIT        0xF0000000U
#define BITM_RX_DIG_ADC_FIFO_WR_PTR_INIT        0xF00U
#define BITM_RX_DIG_RIN_CLK_DIVIDE_RATIO        0x3000U
#define BITM_RX_DIG_RIN_CLK_ENABLE      0x100U
#define BITM_RX_DIG_FIR2_IN_CLK_DIVIDE_RATIO    0x3000U
#define BITM_RX_DIG_DP_FILTER_SELECT    0x30U
#define BITM_TX_ANALOG_DAC_APACHE_CLKDIV_RB     0x20U
#define BITM_TX_ANALOG_DAC_APACHE_CLKDIV_THERMCODE      0x7U
#define BITM_TX_ANALOG_DAC_APACHE_CLKDIV_DIV1_EN        0x1U
#define BITM_TX_DATAPATH_TX_DAC_IF_RD_PTR_INIT  0xF000U
#define BITM_TX_DATAPATH_TX_DAC_IF_WR_PTR_INIT  0xF0000U
#define BITM_TX_DATAPATH_INT3_ENABLE    0x18U
#define BITM_TX_DIG_TOUT_CLK_DIVIDE_RATIO       0xC000U
#define BITM_TX_DIG_TOUT_CLK_ENABLE     0x1000000U
#define BITM_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_RB        0x20U
#define BITM_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_THERMCODE 0x7U
#define BITM_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_DIV1_EN   0x1U
#define BITM_ORX_DIG_ORX_RD_PTR_INIT    0x7C00U
#define BITM_ORX_DIG_ADC_WR_PTR_INIT    0x3E0U
#define BITM_ORX_DIG_RIN_CLK_DIVIDE_RATIO       0x3U
#define BITM_ORX_DIG_RIN_CLK_ENABLE     0x4000U
#define BITM_ORX_DIG_STAGE1_MODE        0x7U
#define BITM_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_RB       0x20U
#define BITM_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_THERMCODE        0x7U
#define BITM_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_DIV1_EN  0x1U
#define BITM_PLL_MEM_MAP_REF_CLK_DIVIDER_PD     0x10U
#define BITM_PLL_MEM_MAP_REF_CLK_DIVIDER_RESETB 0x80U
#define BITM_CORE_SYSREF_BUFFER_EN      0x1U
#define BITM_CORE_SYSREF_SAMPLE_EN      0x1U
#define BITM_PLL_MEM_MAP_MCS_DEVICE_CLK_DIVIDER_SYNC_ENABLE     0x8U
#define BITM_PLL_MEM_MAP_LO_SYNC_RESETB 0x4U
#define BITM_PLL_MEM_MAP_MCS_RESETB     0x8U
#define BITM_CORE_DEVCLK_DIVIDER_MCS_RESETB     0x4U
#define BITM_PLL_MEM_MAP_MCS_CLKGEN_SYNC_ENABLE 0x2U
#define BITM_PLL_MEM_MAP_MCS_ENABLE     0x1U
#define BITM_PLL_MEM_MAP_MCS_SPI_STATUS 0x7U
#define BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVICE_CLK_BUFFER_ENABLE        0x1U
#define BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_RATIO        0x300U
#define BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_RB   0x2000U
#define BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_MCS_RST      0x1000U
#define BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_KILLCLK      0x800U
#define BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_FUND 0x400U
#define BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVICE_CLK_BUFFER_TERM_ENABLE   0x10U
#define BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_REFCLK_CONTROLS_ETH_PLL_REFPATH_PD  0x200U
#define BITM_EMAC_COMMON_ETHPLL_MEM_MAP_RSTN    0x1U
#define BITP_CORE_CLKPLL_REFPATH_PD     0U
#define BITP_CORE_WEST_RFPLL_SYNTH_REFPATH_PD   0U
#define BITP_CORE_EAST_RFPLL_SYNTH_REFPATH_PD   0U
#define BITP_PLL_MEM_MAP_REF_CLK_DIVIDE_RATIO   0U
#define BITP_PLL_MEM_MAP_ROOT_CLKDIV_DIV2       5U
#define BITP_PLL_MEM_MAP_ROOT_CLKDIV_FUND       4U
#define BITP_PLL_MEM_MAP_DIGCORE_CLKDIV_THERMCODE       4U
#define BITP_PLL_MEM_MAP_DIGCORE_INTDIV_BINCODE 0U
#define BITP_PLL_MEM_MAP_CLKGEN_SPARES  0U
#define BITP_TDR_DIG_MISC_CLKDIV_RB     5U
#define BITP_TDR_DIG_MISC_CLKDIV_THERMCODE      0U
#define BITP_TDR_DIG_MISC_DIV1_EN       0U
#define BITP_RX_DIG_ADC_FIFO_RD_PTR_INIT        28U
#define BITP_RX_DIG_ADC_FIFO_WR_PTR_INIT        8U
#define BITP_RX_DIG_RIN_CLK_DIVIDE_RATIO        12U
#define BITP_RX_DIG_RIN_CLK_ENABLE      8U
#define BITP_RX_DIG_FIR2_IN_CLK_DIVIDE_RATIO    12U
#define BITP_RX_DIG_DP_FILTER_SELECT    4U
#define BITP_TX_ANALOG_DAC_APACHE_CLKDIV_RB     5U
#define BITP_TX_ANALOG_DAC_APACHE_CLKDIV_THERMCODE      0U
#define BITP_TX_ANALOG_DAC_APACHE_CLKDIV_DIV1_EN        0U
#define BITP_TX_DATAPATH_TX_DAC_IF_RD_PTR_INIT  12U
#define BITP_TX_DATAPATH_TX_DAC_IF_WR_PTR_INIT  16U
#define BITP_TX_DATAPATH_INT3_ENABLE    3U
#define BITP_TX_DIG_TOUT_CLK_DIVIDE_RATIO       14U
#define BITP_TX_DIG_TOUT_CLK_ENABLE     24U
#define BITP_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_RB        5U
#define BITP_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_THERMCODE 0U
#define BITP_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_DIV1_EN   0U
#define BITP_ORX_DIG_ORX_RD_PTR_INIT    10U
#define BITP_ORX_DIG_ADC_WR_PTR_INIT    5U
#define BITP_ORX_DIG_RIN_CLK_DIVIDE_RATIO       0U
#define BITP_ORX_DIG_RIN_CLK_ENABLE     14U
#define BITP_ORX_DIG_STAGE1_MODE        0U
#define BITP_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_RB       5U
#define BITP_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_THERMCODE        0U
#define BITP_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_DIV1_EN  0U
#define BITP_PLL_MEM_MAP_REF_CLK_DIVIDER_PD     4U
#define BITP_PLL_MEM_MAP_REF_CLK_DIVIDER_RESETB 7U
#define BITP_CORE_SYSREF_BUFFER_EN      0U
#define BITP_CORE_SYSREF_SAMPLE_EN      0U
#define BITP_PLL_MEM_MAP_MCS_DEVICE_CLK_DIVIDER_SYNC_ENABLE     3U
#define BITP_PLL_MEM_MAP_LO_SYNC_RESETB 2U
#define BITP_PLL_MEM_MAP_MCS_RESETB     3U
#define BITP_CORE_DEVCLK_DIVIDER_MCS_RESETB     2U
#define BITP_PLL_MEM_MAP_MCS_CLKGEN_SYNC_ENABLE 1U
#define BITP_PLL_MEM_MAP_MCS_ENABLE     0U
#define BITP_PLL_MEM_MAP_MCS_SPI_STATUS 0U
#define BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVICE_CLK_BUFFER_ENABLE        0U
#define BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_RATIO        8U
#define BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_RB   13U
#define BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_MCS_RST      12U
#define BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_KILLCLK      11U
#define BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_FUND 10U
#define BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVICE_CLK_BUFFER_TERM_ENABLE   4U
#define BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_REFCLK_CONTROLS_ETH_PLL_REFPATH_PD  9U
#define BITP_EMAC_COMMON_ETHPLL_MEM_MAP_RSTN    0U

/* read / write macros */
#define READ_PLL_MEM_MAP_CLKGEN_SPARES(base)    READ_BF_8BIT_REG(pREG_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_DIGCORE_3((base)), BITP_PLL_MEM_MAP_CLKGEN_SPARES, BITM_PLL_MEM_MAP_CLKGEN_SPARES)
#define READ_PLL_MEM_MAP_MCS_CLKGEN_SYNC_ENABLE(base)   READ_BF_8BIT_REG(pREG_PLL_MEM_MAP_PLL_BASE_REGS_MCS_CONTROL((base)), BITP_PLL_MEM_MAP_MCS_CLKGEN_SYNC_ENABLE, BITM_PLL_MEM_MAP_MCS_CLKGEN_SYNC_ENABLE)
#define READ_PLL_MEM_MAP_MCS_SPI_STATUS(base)   READ_BF_8BIT_REG(pREG_PLL_MEM_MAP_PLL_BASE_REGS_MCS_STATUS((base)), BITP_PLL_MEM_MAP_MCS_SPI_STATUS, BITM_PLL_MEM_MAP_MCS_SPI_STATUS)
#define WRITE_CORE_CLKPLL_REFPATH_PD(base, val) WRITE_BF_8BIT_REG(pREG_CORE_DEVCLK_CONTROL_GROUP_REFCLK_CLKSYNTH_CONTROL((base)), BITP_CORE_CLKPLL_REFPATH_PD, BITM_CORE_CLKPLL_REFPATH_PD, ((val)))
#define WRITE_CORE_WEST_RFPLL_SYNTH_REFPATH_PD(base, val)       WRITE_BF_8BIT_REG(pREG_CORE_DEVCLK_CONTROL_GROUP_REFCLK_RFSYNTH_WEST_CONTROL((base)), BITP_CORE_WEST_RFPLL_SYNTH_REFPATH_PD, BITM_CORE_WEST_RFPLL_SYNTH_REFPATH_PD, ((val)))
#define WRITE_CORE_EAST_RFPLL_SYNTH_REFPATH_PD(base, val)       WRITE_BF_8BIT_REG(pREG_CORE_DEVCLK_CONTROL_GROUP_REFCLK_RFSYNTH_EAST_CONTROL((base)), BITP_CORE_EAST_RFPLL_SYNTH_REFPATH_PD, BITM_CORE_EAST_RFPLL_SYNTH_REFPATH_PD, ((val)))
#define WRITE_PLL_MEM_MAP_REF_CLK_DIVIDE_RATIO(base, val)       WRITE_BF_8BIT_REG(pREG_PLL_MEM_MAP_REF_CLK_REG_REF_CLK_BYTE0((base)), BITP_PLL_MEM_MAP_REF_CLK_DIVIDE_RATIO, BITM_PLL_MEM_MAP_REF_CLK_DIVIDE_RATIO, ((val)))
#define WRITE_PLL_MEM_MAP_ROOT_CLKDIV_DIV2(base, val)   WRITE_BF_8BIT_REG(pREG_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_ROOT_DIV((base)), BITP_PLL_MEM_MAP_ROOT_CLKDIV_DIV2, BITM_PLL_MEM_MAP_ROOT_CLKDIV_DIV2, ((val)))
#define WRITE_PLL_MEM_MAP_ROOT_CLKDIV_FUND(base, val)   WRITE_BF_8BIT_REG(pREG_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_ROOT_DIV((base)), BITP_PLL_MEM_MAP_ROOT_CLKDIV_FUND, BITM_PLL_MEM_MAP_ROOT_CLKDIV_FUND, ((val)))
#define WRITE_PLL_MEM_MAP_DIGCORE_CLKDIV_THERMCODE(base, val)   WRITE_BF_8BIT_REG(pREG_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_DIGCORE_2((base)), BITP_PLL_MEM_MAP_DIGCORE_CLKDIV_THERMCODE, BITM_PLL_MEM_MAP_DIGCORE_CLKDIV_THERMCODE, ((val)))
#define WRITE_PLL_MEM_MAP_DIGCORE_INTDIV_BINCODE(base, val)     WRITE_BF_8BIT_REG(pREG_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_DIGCORE_2((base)), BITP_PLL_MEM_MAP_DIGCORE_INTDIV_BINCODE, BITM_PLL_MEM_MAP_DIGCORE_INTDIV_BINCODE, ((val)))
#define WRITE_PLL_MEM_MAP_CLKGEN_SPARES(base, val)      WRITE_BF_8BIT_REG(pREG_PLL_MEM_MAP_CLKGEN_REGS_CLKGEN_DIGCORE_3((base)), BITP_PLL_MEM_MAP_CLKGEN_SPARES, BITM_PLL_MEM_MAP_CLKGEN_SPARES, ((val)))
#define WRITE_TDR_DIG_MISC_CLKDIV_RB(base, val) WRITE_BF_32BIT_REG(pREG_TDR_DIG_MISC_CLKDIV_CONTROL((base)), BITP_TDR_DIG_MISC_CLKDIV_RB, BITM_TDR_DIG_MISC_CLKDIV_RB, ((val)))
#define WRITE_TDR_DIG_MISC_CLKDIV_THERMCODE(base, val)  WRITE_BF_32BIT_REG(pREG_TDR_DIG_MISC_CLKDIV_SAMPLE_CLK_DIVRATIO((base)), BITP_TDR_DIG_MISC_CLKDIV_THERMCODE, BITM_TDR_DIG_MISC_CLKDIV_THERMCODE, ((val)))
#define WRITE_TDR_DIG_MISC_DIV1_EN(base, val)   WRITE_BF_32BIT_REG(pREG_TDR_DIG_MISC_CLKDIV_CONTROL((base)), BITP_TDR_DIG_MISC_DIV1_EN, BITM_TDR_DIG_MISC_DIV1_EN, ((val)))
#define WRITE_RX_DIG_ADC_FIFO_RD_PTR_INIT(base, val)    WRITE_BF_32BIT_REG(pREG_RX_DIG_ADC_INTERFACE_FIFO_ADC_INTERFACE_FIFO_0((base)), BITP_RX_DIG_ADC_FIFO_RD_PTR_INIT, BITM_RX_DIG_ADC_FIFO_RD_PTR_INIT, ((val)))
#define WRITE_RX_DIG_ADC_FIFO_WR_PTR_INIT(base, val)    WRITE_BF_32BIT_REG(pREG_RX_DIG_ADC_INTERFACE_FIFO_ADC_INTERFACE_FIFO_1((base)), BITP_RX_DIG_ADC_FIFO_WR_PTR_INIT, BITM_RX_DIG_ADC_FIFO_WR_PTR_INIT, ((val)))
#define WRITE_RX_DIG_RIN_CLK_DIVIDE_RATIO(base, val)    WRITE_BF_32BIT_REG(pREG_RX_DIG_CHANNEL_CONFIGURATION_CHANNEL_CONFIG_9((base)), BITP_RX_DIG_RIN_CLK_DIVIDE_RATIO, BITM_RX_DIG_RIN_CLK_DIVIDE_RATIO, ((val)))
#define WRITE_RX_DIG_RIN_CLK_ENABLE(base, val)  WRITE_BF_32BIT_REG(pREG_RX_DIG_CHANNEL_CONFIGURATION_CHANNEL_CONFIG_0((base)), BITP_RX_DIG_RIN_CLK_ENABLE, BITM_RX_DIG_RIN_CLK_ENABLE, ((val)))
#define WRITE_RX_DIG_FIR2_IN_CLK_DIVIDE_RATIO(base, val)        WRITE_BF_32BIT_REG(pREG_RX_DIG_CHANNEL_CONFIGURATION_CHANNEL_CONFIG_8((base)), BITP_RX_DIG_FIR2_IN_CLK_DIVIDE_RATIO, BITM_RX_DIG_FIR2_IN_CLK_DIVIDE_RATIO, ((val)))
#define WRITE_RX_DIG_DP_FILTER_SELECT(base, val)        WRITE_BF_32BIT_REG(pREG_RX_DIG_CHANNEL_CONFIGURATION_CHANNEL_CONFIG_8((base)), BITP_RX_DIG_DP_FILTER_SELECT, BITM_RX_DIG_DP_FILTER_SELECT, ((val)))
#define WRITE_TX_ANALOG_DAC_APACHE_CLKDIV_RB(base, val) WRITE_BF_8BIT_REG(pREG_TX_ANALOG_DAC_APACHE_DAC_CLK_APACHE_CLKDIV_CONTROL((base)), BITP_TX_ANALOG_DAC_APACHE_CLKDIV_RB, BITM_TX_ANALOG_DAC_APACHE_CLKDIV_RB, ((val)))
#define WRITE_TX_ANALOG_DAC_APACHE_CLKDIV_THERMCODE(base, val)  WRITE_BF_8BIT_REG(pREG_TX_ANALOG_DAC_APACHE_DAC_CLK_APACHE_CLKDIV_SAMPLE_CLK_DIVRATIO((base)), BITP_TX_ANALOG_DAC_APACHE_CLKDIV_THERMCODE, BITM_TX_ANALOG_DAC_APACHE_CLKDIV_THERMCODE, ((val)))
#define WRITE_TX_ANALOG_DAC_APACHE_CLKDIV_DIV1_EN(base, val)    WRITE_BF_8BIT_REG(pREG_TX_ANALOG_DAC_APACHE_DAC_CLK_APACHE_CLKDIV_CONTROL((base)), BITP_TX_ANALOG_DAC_APACHE_CLKDIV_DIV1_EN, BITM_TX_ANALOG_DAC_APACHE_CLKDIV_DIV1_EN, ((val)))
#define WRITE_TX_DATAPATH_TX_DAC_IF_RD_PTR_INIT(base, val)      WRITE_BF_32BIT_REG(pREG_TX_DATAPATH_TX_DAC_INTERFACE_CTL_STAT((base)), BITP_TX_DATAPATH_TX_DAC_IF_RD_PTR_INIT, BITM_TX_DATAPATH_TX_DAC_IF_RD_PTR_INIT, ((val)))
#define WRITE_TX_DATAPATH_TX_DAC_IF_WR_PTR_INIT(base, val)      WRITE_BF_32BIT_REG(pREG_TX_DATAPATH_TX_DAC_INTERFACE_CTL_STAT((base)), BITP_TX_DATAPATH_TX_DAC_IF_WR_PTR_INIT, BITM_TX_DATAPATH_TX_DAC_IF_WR_PTR_INIT, ((val)))
#define WRITE_TX_DATAPATH_INT3_ENABLE(base, val)        WRITE_BF_32BIT_REG(pREG_TX_DATAPATH_FILTER_CONTROL_0((base)), BITP_TX_DATAPATH_INT3_ENABLE, BITM_TX_DATAPATH_INT3_ENABLE, ((val)))
#define WRITE_TX_DIG_TOUT_CLK_DIVIDE_RATIO(base, val)   WRITE_BF_32BIT_REG(pREG_TX_DIG_CLOCK_CONTROL_REGISTERS_CLOCK_CONTROL_0((base)), BITP_TX_DIG_TOUT_CLK_DIVIDE_RATIO, BITM_TX_DIG_TOUT_CLK_DIVIDE_RATIO, ((val)))
#define WRITE_TX_DIG_TOUT_CLK_ENABLE(base, val) WRITE_BF_32BIT_REG(pREG_TX_DIG_CLOCK_CONTROL_REGISTERS_CLOCK_CONTROL_0((base)), BITP_TX_DIG_TOUT_CLK_ENABLE, BITM_TX_DIG_TOUT_CLK_ENABLE, ((val)))
#define WRITE_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_RB(base, val)    WRITE_BF_8BIT_REG(pREG_ACTRL_ORX_WEST_REGMAP_ACTRL_ORX_WEST_REGMAP_CLKDIV_CONTROL((base)), BITP_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_RB, BITM_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_RB, ((val)))
#define WRITE_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_THERMCODE(base, val)     WRITE_BF_8BIT_REG(pREG_ACTRL_ORX_WEST_REGMAP_ACTRL_ORX_WEST_REGMAP_CLKDIV_SAMPLE_CLK_DIVRATIO((base)), BITP_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_THERMCODE, BITM_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_THERMCODE, ((val)))
#define WRITE_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_DIV1_EN(base, val)       WRITE_BF_8BIT_REG(pREG_ACTRL_ORX_WEST_REGMAP_ACTRL_ORX_WEST_REGMAP_CLKDIV_CONTROL((base)), BITP_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_DIV1_EN, BITM_ACTRL_ORX_WEST_REGMAP_TRM_CLKDIV_DIV1_EN, ((val)))
#define WRITE_ORX_DIG_ORX_RD_PTR_INIT(base, val)        WRITE_BF_32BIT_REG(pREG_ORX_DIG_ADC_AND_INTERFACE_CONTROL_VENUS_INTERFACE_CONTROL((base)), BITP_ORX_DIG_ORX_RD_PTR_INIT, BITM_ORX_DIG_ORX_RD_PTR_INIT, ((val)))
#define WRITE_ORX_DIG_ADC_WR_PTR_INIT(base, val)        WRITE_BF_32BIT_REG(pREG_ORX_DIG_ADC_AND_INTERFACE_CONTROL_VENUS_INTERFACE_CONTROL((base)), BITP_ORX_DIG_ADC_WR_PTR_INIT, BITM_ORX_DIG_ADC_WR_PTR_INIT, ((val)))
#define WRITE_ORX_DIG_RIN_CLK_DIVIDE_RATIO(base, val)   WRITE_BF_32BIT_REG(pREG_ORX_DIG_CHANNEL_CONFIGURATION_REGISTERS_CLOCK_CONFIG0((base)), BITP_ORX_DIG_RIN_CLK_DIVIDE_RATIO, BITM_ORX_DIG_RIN_CLK_DIVIDE_RATIO, ((val)))
#define WRITE_ORX_DIG_RIN_CLK_ENABLE(base, val) WRITE_BF_32BIT_REG(pREG_ORX_DIG_CHANNEL_CONFIGURATION_REGISTERS_CLOCK_CONFIG0((base)), BITP_ORX_DIG_RIN_CLK_ENABLE, BITM_ORX_DIG_RIN_CLK_ENABLE, ((val)))
#define WRITE_ORX_DIG_STAGE1_MODE(base, val)    WRITE_BF_32BIT_REG(pREG_ORX_DIG_CHANNEL_CONFIGURATION_REGISTERS_DATAPATH_CONFIG((base)), BITP_ORX_DIG_STAGE1_MODE, BITM_ORX_DIG_STAGE1_MODE, ((val)))
#define WRITE_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_RB(base, val)   WRITE_BF_8BIT_REG(pREG_ACTRL_TXLB_WEST_REGMAP_ACTRL_TXLB_WEST_REGMAP_CLKDIV_CONTROL((base)), BITP_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_RB, BITM_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_RB, ((val)))
#define WRITE_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_THERMCODE(base, val)    WRITE_BF_8BIT_REG(pREG_ACTRL_TXLB_WEST_REGMAP_ACTRL_TXLB_WEST_REGMAP_CLKDIV_SAMPLE_CLK_DIVRATIO((base)), BITP_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_THERMCODE, BITM_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_THERMCODE, ((val)))
#define WRITE_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_DIV1_EN(base, val)      WRITE_BF_8BIT_REG(pREG_ACTRL_TXLB_WEST_REGMAP_ACTRL_TXLB_WEST_REGMAP_CLKDIV_CONTROL((base)), BITP_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_DIV1_EN, BITM_ACTRL_TXLB_WEST_REGMAP_TRM_CLKDIV_DIV1_EN, ((val)))
#define WRITE_PLL_MEM_MAP_REF_CLK_DIVIDER_PD(base, val) WRITE_BF_8BIT_REG(pREG_PLL_MEM_MAP_PD_EN_RESETB_REGS_MISC_PD((base)), BITP_PLL_MEM_MAP_REF_CLK_DIVIDER_PD, BITM_PLL_MEM_MAP_REF_CLK_DIVIDER_PD, ((val)))
#define WRITE_PLL_MEM_MAP_REF_CLK_DIVIDER_RESETB(base, val)     WRITE_BF_8BIT_REG(pREG_PLL_MEM_MAP_PD_EN_RESETB_REGS_SYNTH_RESETB((base)), BITP_PLL_MEM_MAP_REF_CLK_DIVIDER_RESETB, BITM_PLL_MEM_MAP_REF_CLK_DIVIDER_RESETB, ((val)))
#define WRITE_CORE_SYSREF_BUFFER_EN(base, val)  WRITE_BF_8BIT_REG(pREG_CORE_DEVCLK_CONTROL_GROUP_SYSREF_BUFFER_CONTROL((base)), BITP_CORE_SYSREF_BUFFER_EN, BITM_CORE_SYSREF_BUFFER_EN, ((val)))
#define WRITE_CORE_SYSREF_SAMPLE_EN(base, val)  WRITE_BF_8BIT_REG(pREG_CORE_DEVCLK_CONTROL_GROUP_DEVCLK_DIVIDER_CONTROL((base)), BITP_CORE_SYSREF_SAMPLE_EN, BITM_CORE_SYSREF_SAMPLE_EN, ((val)))
#define WRITE_PLL_MEM_MAP_MCS_DEVICE_CLK_DIVIDER_SYNC_ENABLE(base, val) WRITE_BF_8BIT_REG(pREG_PLL_MEM_MAP_PLL_BASE_REGS_MCS_CONTROL((base)), BITP_PLL_MEM_MAP_MCS_DEVICE_CLK_DIVIDER_SYNC_ENABLE, BITM_PLL_MEM_MAP_MCS_DEVICE_CLK_DIVIDER_SYNC_ENABLE, ((val)))
#define WRITE_PLL_MEM_MAP_LO_SYNC_RESETB(base, val)     WRITE_BF_8BIT_REG(pREG_PLL_MEM_MAP_PD_EN_RESETB_REGS_SYNTH_RESETB((base)), BITP_PLL_MEM_MAP_LO_SYNC_RESETB, BITM_PLL_MEM_MAP_LO_SYNC_RESETB, ((val)))
#define WRITE_PLL_MEM_MAP_MCS_RESETB(base, val) WRITE_BF_8BIT_REG(pREG_PLL_MEM_MAP_PD_EN_RESETB_REGS_SYNTH_RESETB((base)), BITP_PLL_MEM_MAP_MCS_RESETB, BITM_PLL_MEM_MAP_MCS_RESETB, ((val)))
#define WRITE_CORE_DEVCLK_DIVIDER_MCS_RESETB(base, val) WRITE_BF_8BIT_REG(pREG_CORE_DEVCLK_CONTROL_GROUP_DEVCLK_DIVIDER_CONTROL((base)), BITP_CORE_DEVCLK_DIVIDER_MCS_RESETB, BITM_CORE_DEVCLK_DIVIDER_MCS_RESETB, ((val)))
#define WRITE_PLL_MEM_MAP_MCS_CLKGEN_SYNC_ENABLE(base, val)     WRITE_BF_8BIT_REG(pREG_PLL_MEM_MAP_PLL_BASE_REGS_MCS_CONTROL((base)), BITP_PLL_MEM_MAP_MCS_CLKGEN_SYNC_ENABLE, BITM_PLL_MEM_MAP_MCS_CLKGEN_SYNC_ENABLE, ((val)))
#define WRITE_PLL_MEM_MAP_MCS_ENABLE(base, val) WRITE_BF_8BIT_REG(pREG_PLL_MEM_MAP_PLL_BASE_REGS_MCS_CONTROL((base)), BITP_PLL_MEM_MAP_MCS_ENABLE, BITM_PLL_MEM_MAP_MCS_ENABLE, ((val)))
#define WRITE_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVICE_CLK_BUFFER_ENABLE(base, val)    WRITE_BF_32BIT_REG(pREG_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS((base)), BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVICE_CLK_BUFFER_ENABLE, BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVICE_CLK_BUFFER_ENABLE, ((val)))
#define WRITE_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_RATIO(base, val)    WRITE_BF_32BIT_REG(pREG_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS((base)), BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_RATIO, BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_RATIO, ((val)))
#define WRITE_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_RB(base, val)       WRITE_BF_32BIT_REG(pREG_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS((base)), BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_RB, BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_RB, ((val)))
#define WRITE_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_MCS_RST(base, val)  WRITE_BF_32BIT_REG(pREG_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS((base)), BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_MCS_RST, BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_MCS_RST, ((val)))
#define WRITE_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_KILLCLK(base, val)  WRITE_BF_32BIT_REG(pREG_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS((base)), BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_KILLCLK, BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_KILLCLK, ((val)))
#define WRITE_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_FUND(base, val)     WRITE_BF_32BIT_REG(pREG_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS((base)), BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_FUND, BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVCLK_DIV_FUND, ((val)))
#define WRITE_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVICE_CLK_BUFFER_TERM_ENABLE(base, val)       WRITE_BF_32BIT_REG(pREG_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS((base)), BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVICE_CLK_BUFFER_TERM_ENABLE, BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_DEVCLK_CONTROLS_ETH_DEVICE_CLK_BUFFER_TERM_ENABLE, ((val)))
#define WRITE_A55_SYS_CFG_CLOCK_CONTROLS_ETH_REFCLK_CONTROLS_ETH_PLL_REFPATH_PD(base, val)      WRITE_BF_32BIT_REG(pREG_A55_SYS_CFG_CLOCK_CONTROLS_ETH_REFCLK_CONTROLS((base)), BITP_A55_SYS_CFG_CLOCK_CONTROLS_ETH_REFCLK_CONTROLS_ETH_PLL_REFPATH_PD, BITM_A55_SYS_CFG_CLOCK_CONTROLS_ETH_REFCLK_CONTROLS_ETH_PLL_REFPATH_PD, ((val)))
#define WRITE_EMAC_COMMON_ETHPLL_MEM_MAP_RSTN(base, val)        WRITE_BF_32BIT_REG(pREG_EMAC_COMMON_ETH_PLL_REGISTERS_ETHPLL_REG_MAP_CONTROL((base)), BITP_EMAC_COMMON_ETHPLL_MEM_MAP_RSTN, BITM_EMAC_COMMON_ETHPLL_MEM_MAP_RSTN, ((val)))


#endif /* __ADI_ADRV906X_MCS_INTERNAL_H__ */
